{
	"name": "df_flatten_vs_parse_JSON",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_json_dataflow_sample",
						"type": "DatasetReference"
					},
					"name": "SourceJSONCakes"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage_LS",
						"type": "LinkedServiceReference"
					},
					"name": "SourceCSVCakes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_dataflow_output",
						"type": "DatasetReference"
					},
					"name": "SinkFlattenOutput"
				}
			],
			"transformations": [
				{
					"name": "FlattenTopping"
				},
				{
					"name": "FlattenBatter"
				},
				{
					"name": "ParseJSONData"
				},
				{
					"name": "ParseTopping"
				}
			],
			"script": "source(output(\n\t\tbatters as (batter as (id as short, type as string)[]),\n\t\tid as short,\n\t\tname as string,\n\t\tppu as double,\n\t\ttopping as (id as short, type as string)[],\n\t\ttype as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'arrayOfDocuments',\n\twildcardPaths:['ManyJSON_Objects.json']) ~> SourceJSONCakes\nsource(output(\n\t\tjson_data_column as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tcontainer: 'jsondata',\n\tfileName: 'ManyJSON_Objects - CSV.csv',\n\tcolumnDelimiter: '\\u0001',\n\tescapeChar: '\\\\',\n\tqutoChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> SourceCSVCakes\nSourceJSONCakes foldDown(unroll(topping),\n\tmapColumn(\n\t\tid,\n\t\tcake_type = type,\n\t\tcake_name = name,\n\t\tppu,\n\t\ttopping_id = topping.id,\n\t\ttopping_type = topping.type,\n\t\tbatters\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenTopping\nFlattenTopping foldDown(unroll(batters.batter, batters.batter),\n\tmapColumn(\n\t\tid,\n\t\tcake_type,\n\t\tcake_name,\n\t\tppu,\n\t\ttopping_id,\n\t\ttopping_type,\n\t\tbatter_id = batters.batter.id,\n\t\tbatter_type = batters.batter.type\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenBatter\nSourceCSVCakes parse(json_data_column_parsed = json_data_column ? (id as string,\n\t\ttype as string,\n\t\tname as string,\n\t\tppu as float,\n\t\ttopping as string[]),\n\tformat: 'json',\n\tdocumentForm: 'singleDocument') ~> ParseJSONData\nParseJSONData parse(topping = json_data_column_parsed.topping ? (id as string[],\n\t\ttype as string[]),\n\tformat: 'json',\n\tdocumentForm: 'documentPerLine') ~> ParseTopping\nFlattenBatter sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tpartitionFileNames:['flatten_output.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkFlattenOutput"
		}
	}
}