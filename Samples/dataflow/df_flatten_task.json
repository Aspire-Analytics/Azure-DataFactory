{
	"name": "df_flatten_task",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_json_dataflow_sample",
						"type": "DatasetReference"
					},
					"name": "srcdatafile"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Flatten1"
				},
				{
					"name": "Flatten2"
				},
				{
					"name": "Flatten3"
				}
			],
			"script": "source(output(\n\t\tgoods as (customers as string[], orders as (orderId as short, orderTotal as double, shipped as (orderItems as (itemName as string, itemQty as short)[]))[], trade as boolean),\n\t\tlocation as string,\n\t\tname as string,\n\t\tsatellites as string[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tinferDriftedColumnTypes: true,\n\tsingleDocument: true,\n\twildcardPaths:['Influenza hospitalizations per 100K.csv']) ~> srcdatafile\nsrcdatafile foldDown(unroll(goods.customers),\n\tmapColumn(\n\t\tname,\n\t\tcustomers = goods.customers\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nsrcdatafile foldDown(unroll(goods.orders.shipped.orderItems),\n\tmapColumn(\n\t\tname,\n\t\titemName = goods.orders.shipped.orderItems.itemName,\n\t\titemQty = goods.orders.shipped.orderItems.itemQty,\n\t\tlocation,\n\t\torderId = goods.orders.orderId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten2\nsrcdatafile foldDown(unroll(goods.orders.shipped.orderItems, goods.orders),\n\tmapColumn(\n\t\titemName = goods.orders.shipped.orderItems.itemName,\n\t\tlocation,\n\t\tname,\n\t\titemQty = goods.orders.shipped.orderItems.itemQty\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten3"
		}
	}
}