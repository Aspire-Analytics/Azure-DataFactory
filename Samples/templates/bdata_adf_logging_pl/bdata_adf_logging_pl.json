{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name"
		},
		"AzureSqlDatabase_LS": {
			"type": "string"
		},
		"AzureBlobStorage_LS": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/bdata_adf_logging_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validate filename list",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Filenames Store 01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"variableName": "var_file_list_check",
							"value": {
								"value": "@variables('var_file_list')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Load data into SQL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Validate filename list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"items": {
								"value": "@variables('var_file_list')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Data Blob to SQL",
									"type": "Copy",
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0,
										"translator": {
											"type": "TabularTranslator",
											"columnMappings": {
												"store_id": "store_id",
												"date_id": "date_id",
												"product_id": "product_id",
												"stock_amt": "stock_amt"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureBlob_storesales_storesall",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": "storesales",
												"FileName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable_storesales",
											"type": "DatasetReference"
										}
									]
								},
								{
									"name": "Logging Copy Data",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "Copy Data Blob to SQL",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"typeProperties": {
										"variableName": "var_logging",
										"value": {
											"value": "@concat('Copy Data Blob to SQL|Copy|',pipeline().DataFactory,'|',activity('Copy Data Blob to SQL').Duration,'|',activity('Copy Data Blob to SQL').Error,'|',activity('Copy Data Blob to SQL').ExecutionDetails,'|',activity('Copy Data Blob to SQL').ExecutionEndTime,'|',activity('Copy Data Blob to SQL').ExecutionStartTime,'|',activity('Copy Data Blob to SQL').JobId,'|',activity('Copy Data Blob to SQL').Output,'|',pipeline().Pipeline,'|',activity('Copy Data Blob to SQL').ActivityRunId,'|',activity('Copy Data Blob to SQL').Status,'|',activity('Copy Data Blob to SQL').StatusCode)\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Metadata Store 01",
						"type": "GetMetadata",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataset": {
								"referenceName": "AzureBlob_storesales_store01",
								"type": "DatasetReference"
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Filenames Store 01",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Metadata Store 01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"items": {
								"value": "@activity('Metadata Store 01').output.childitems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Build filename list 01",
									"type": "AppendVariable",
									"typeProperties": {
										"variableName": "var_file_list",
										"value": {
											"value": "@concat('store_01/',item().name)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Logging Metadata",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Metadata Store 01",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"typeProperties": {
							"variableName": "var_logging",
							"value": {
								"value": "@concat('Metadata Store 01|Copy|',pipeline().DataFactory,'|',activity('Metadata Store 01').Duration,'|',activity('Metadata Store 01').Error,'|',activity('Metadata Store 01').ExecutionDetails,'|',activity('Metadata Store 01').ExecutionEndTime,'|',activity('Metadata Store 01').ExecutionStartTime,'|',activity('Metadata Store 01').JobId,'|',activity('Metadata Store 01').Output,'|',pipeline().Pipeline,'|',activity('Metadata Store 01').ActivityRunId,'|',activity('Metadata Store 01').Status,'|',activity('Metadata Store 01').StatusCode)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Logging to SQL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Logging Metadata",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Load data into SQL",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"typeProperties": {
							"items": {
								"value": "@variables('var_logging')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored Procedure1",
									"type": "SqlServerStoredProcedure",
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"typeProperties": {
										"storedProcedureName": "[concat('[', 'dbo].[sp_adf_pipeline_log_update]')]",
										"storedProcedureParameters": {
											"ActivityTask": {
												"value": {
													"value": "@split(item(),'|')[0]",
													"type": "Expression"
												},
												"type": "String"
											},
											"ActivityType": {
												"value": {
													"value": "@split(item(),'|')[1]",
													"type": "Expression"
												},
												"type": "String"
											},
											"DataFactory": {
												"value": {
													"value": "@split(item(),'|')[2]",
													"type": "Expression"
												},
												"type": "String"
											},
											"Duration": {
												"value": {
													"value": "@split(item(),'|')[3]",
													"type": "Expression"
												},
												"type": "TimeSpan"
											},
											"Error": {
												"value": {
													"value": "@split(item(),'|')[4]",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionDetails": {
												"value": {
													"value": "@split(item(),'|')[5]",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionEndTime": {
												"value": {
													"value": "@split(item(),'|')[6]",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"ExecutionStartTime": {
												"value": {
													"value": "@split(item(),'|')[7]",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"JobId": {
												"value": {
													"value": "@split(item(),'|')[8]",
													"type": "Expression"
												},
												"type": "String"
											},
											"Output": {
												"value": {
													"value": "@split(item(),'|')[9]",
													"type": "Expression"
												},
												"type": "String"
											},
											"Pipeline": {
												"value": {
													"value": "@split(item(),'|')[10]",
													"type": "Expression"
												},
												"type": "String"
											},
											"RunId": {
												"value": {
													"value": "@split(item(),'|')[11]",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@split(item(),'|')[12]",
													"type": "Expression"
												},
												"type": "String"
											},
											"StatusCode": {
												"value": {
													"value": "@split(item(),'|')[13]",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AzureSqlDatabase_LS')]",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"variables": {
					"var_file_list": {
						"type": "Array"
					},
					"var_file_list_check": {
						"type": "Array"
					},
					"var_logging": {
						"type": "Array"
					},
					"var_logging_line": {
						"type": "Array"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureBlob_storesales_store01')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlob_storesales_storesall')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_storesales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob_storesales_store01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorage_LS')]",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "",
					"folderPath": "storesales/store_01"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob_storesales_storesall')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorage_LS')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					}
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "store_id",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "stock_amt",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "@dataset().FileName",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().FilePath",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_storesales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureSqlDatabase_LS')]",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "store_id",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "stock_amt",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[storeinventory]')]"
				}
			}
		}
	]
}