{
	"name": "CopyFilesfromMultipleContainers",
	"properties": {
		"description": "Copy all files across multiple containers or buckets from one file-based storage store to another",
		"activities": [
			{
				"name": "Enumerate Containers List Trips",
				"description": "Scan the file path on your source storage store and get the container list.",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "AzureBlobStorageSourceFileStore",
						"type": "DatasetReference",
						"parameters": {
							"folder": {
								"value": "@pipeline().parameters.SourceFilePath_trip",
								"type": "Expression"
							},
							"filename": "*.zip"
						}
					},
					"fieldList": [
						"childItems"
					]
				}
			},
			{
				"name": "ForEachContainer Trip",
				"description": "Get the container list from Metadata activity and then iterates each of them to Copy activity.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Enumerate Containers List Trips",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Enumerate Containers List Trips').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "CopyOneContainer Trip",
							"description": "Copy each container from source storage store to destination store.",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "@concat(pipeline().parameters.SourceFilePath_trip,'/',item().name)"
								},
								{
									"name": "Destination",
									"value": "@concat(pipeline().parameters.DestinationFilePath_trip,'/',item().name)"
								}
							],
							"typeProperties": {
								"source": {
									"type": "BlobSource",
									"recursive": false
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ""
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 2
							},
							"inputs": [
								{
									"referenceName": "AzureBlobStorageSourceFileStore",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@concat(pipeline().parameters.SourceFilePath_trip)",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ADLS_Gen2",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@pipeline().parameters.DestinationFilePath_trip",
											"type": "Expression"
										},
										"filename": {
											"value": "@replace(item().name,'.zip','.csv')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Enumerate Containers List Fare",
				"description": "Scan the file path on your source storage store and get the container list.",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "AzureBlobStorageSourceFileStore",
						"type": "DatasetReference",
						"parameters": {
							"folder": {
								"value": "@pipeline().parameters.SourceFilePath_fare",
								"type": "Expression"
							},
							"filename": "*.zip"
						}
					},
					"fieldList": [
						"childItems"
					]
				}
			},
			{
				"name": "ForEachContainer Fare",
				"description": "Get the container list from Metadata activity and then iterates each of them to Copy activity.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Enumerate Containers List Fare",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Enumerate Containers List Fare').output.childItems",
						"type": "Expression"
					},
					"batchCount": 4,
					"activities": [
						{
							"name": "CopyOneContainer Fare",
							"description": "Copy each container from source storage store to destination store.",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "@concat(pipeline().parameters.SourceFilePath_trip,'/',item().name)"
								},
								{
									"name": "Destination",
									"value": "@concat(pipeline().parameters.DestinationFilePath_trip,'/',item().name)"
								}
							],
							"typeProperties": {
								"source": {
									"type": "BlobSource",
									"recursive": false
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ""
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 2
							},
							"inputs": [
								{
									"referenceName": "AzureBlobStorageSourceFileStore",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@concat(pipeline().parameters.SourceFilePath_fare)",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ADLS_Gen2",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@pipeline().parameters.DestinationFilePath_fare",
											"type": "Expression"
										},
										"filename": {
											"value": "@replace(item().name,'.zip','.csv')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"SourceFilePath_trip": {
				"type": "String",
				"defaultValue": "/nyctaxidata-raw/trip_data"
			},
			"DestinationFilePath_trip": {
				"type": "String",
				"defaultValue": "/nyctaxidata-staging/trip_data"
			},
			"SourceFilePath_fare": {
				"type": "string",
				"defaultValue": "/nyctaxidata-raw/trip_fare"
			},
			"DestinationFilePath_fare": {
				"type": "string",
				"defaultValue": "/nyctaxidata-staging/trip_fare"
			}
		},
		"annotations": []
	}
}