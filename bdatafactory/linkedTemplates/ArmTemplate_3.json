{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bdatafactory"
		},
		"Template_FileShare_ds_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "*.txt"
		},
		"Template_FileShare_ds_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "Move"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Customer_HK",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "BirthDate",
						"type": "date"
					},
					{
						"name": "MaritalStatus",
						"type": "nchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "YearlyIncome",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalChildren",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "NumberChildrenAtHome",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "HouseOwnerFlag",
						"type": "nchar"
					},
					{
						"name": "NumberCarsOwned",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "SAT_Customer_HDIFF",
						"type": "varchar"
					},
					{
						"name": "LOAD_TS",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SAT_Customer"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_Customer_Latest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Customer_HK",
						"type": "varchar"
					},
					{
						"name": "SAT_Customer_HDIFF",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "vw_latest_sat_customer"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_Geography')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Geography_HK",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvinceCode",
						"type": "nvarchar"
					},
					{
						"name": "StateProvinceName",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegionCode",
						"type": "nvarchar"
					},
					{
						"name": "EnglishCountryRegionName",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "SAT_Geography_HDIFF",
						"type": "varchar"
					},
					{
						"name": "LOAD_TS",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SAT_Geography"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_Geography_Latest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Geography_HK",
						"type": "varchar"
					},
					{
						"name": "SAT_Geography_HDIFF",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "vw_latest_sat_geography"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_InternetSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LINK_InternetSales_HK",
						"type": "varchar"
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderQuantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ExtendedAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DiscountAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductStandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerPONumber",
						"type": "nvarchar"
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SAT_InternetSales_HDIFF",
						"type": "varchar"
					},
					{
						"name": "LOAD_TS",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[SAT_InternetSales]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_InternetSales_Latest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LINK_InternetSales_HK",
						"type": "varchar"
					},
					{
						"name": "SAT_InternetSales_HDIFF",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[vw_latest_sat_internetsales]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_Product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Product_HK",
						"type": "varchar"
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "EnglishProductName",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "bit"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "SafetyStockLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ReorderPoint",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "SizeRange",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ModelName",
						"type": "nvarchar"
					},
					{
						"name": "SAT_Product_HDIFF",
						"type": "varchar"
					},
					{
						"name": "LOAD_TS",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[SAT_Product]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_Product_Latest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Product_HK",
						"type": "varchar"
					},
					{
						"name": "SAT_Product_HDIFF",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[vw_latest_sat_product]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_bgdata_daily')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sample Datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Date",
						"type": "DateTime"
					},
					{
						"name": "Account_ID",
						"type": "Int32"
					},
					{
						"name": "Sales",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[DailySales]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_bgdata_monthly')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sample Datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Year",
						"type": "Int32"
					},
					{
						"name": "Month",
						"type": "Int32"
					},
					{
						"name": "Account_ID",
						"type": "Int32"
					},
					{
						"name": "Total_Sales",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[MonthlySales]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_storesales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sample Datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "store_id",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "stock_amt",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[storeinventory]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Template_FileShare_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileSystem_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Template Datasets"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('Template_FileShare_ds_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('Template_FileShare_ds_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NYC_Taxi_Distance_Trip_wdf')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "TripData",
							"script": "",
							"dataset": {
								"referenceName": "TripData",
								"type": "DatasetReference"
							}
						}
					],
					"sinks": [
						{
							"name": "Sink1",
							"dataset": {
								"referenceName": "TaxiSink",
								"type": "DatasetReference"
							},
							"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\ttruncate: true,\n\tquoteAll: true) ~> Sink1"
						}
					],
					"script": "section Section1; shared #\"TripData\" = let AdfDoc = Web.Contents(\"https://bdataadlsgen2.dfs.core.windows.net/nyctaxidata-staging/trip_data/trip_data_1.csv?sv=2018-03-28&sig=On4A%2BKZBoXW0Ro4Q3x%2FWTJjNuIoB6f2SKAptnVXioWU%3D&spr=https&se=2019-11-08T20%3A49%3A38Z&srt=sco&ss=bf&sp=rwl\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]), TrimmedHeaders = Table.TransformColumnNames(PromotedHeaders, (columnName as text) as text => Text.Trim(columnName)) in TrimmedHeaders;\r\nshared UserQuery = let\r\n  Source = TripData,\r\n  ChangedType = Table.TransformColumnTypes(Source, {{\"trip_distance\", type number}, {\"pickup_longitude\", type number}, {\"pickup_latitude\", type number}, {\"dropoff_longitude\", type number}, {\"dropoff_latitude\", type number}}),\r\n  Lat1_Rad = Table.AddColumn(ChangedType, \"Lat1_Rad\", each ([pickup_latitude] / 180) * Number.PI),\r\n  Lon1_Rad = Table.AddColumn(Lat1_Rad, \"Lon1_Rad\", each ([pickup_longitude] / 180) * Number.PI),\r\n  Lat2_Rad = Table.AddColumn(Lon1_Rad, \"Lat2_Rad\", each ([dropoff_latitude] / 180)    * Number.PI),\r\n  Lon2_Rad = Table.AddColumn(Lat2_Rad, \"Lon2_Rad\", each ([dropoff_longitude] / 180) * Number.PI),\r\n  Distance_Mi = Table.AddColumn(Lon2_Rad, \"Distance_Mi\", each Number.Acos(Number.Sin([Lat1_Rad]) * Number.Sin([Lat2_Rad]) + Number.Cos([Lat1_Rad]) * Number.Cos([Lat2_Rad]) * Number.Cos([Lon2_Rad]-[Lon1_Rad])) * 3959),\r\n  RemovedColumns = Table.RemoveColumns(Distance_Mi, {\"Lat1_Rad\", \"Lon1_Rad\", \"Lat2_Rad\", \"Lon2_Rad\"})\r\nin\r\n  RemovedColumns;"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TaxiDemo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "TripData",
							"script": "",
							"dataset": {
								"referenceName": "TripData",
								"type": "DatasetReference"
							}
						},
						{
							"name": "TripFares",
							"script": "",
							"dataset": {
								"referenceName": "TripFares",
								"type": "DatasetReference"
							}
						}
					],
					"sinks": [
						{
							"name": "Sink1",
							"dataset": {
								"referenceName": "TaxiSink",
								"type": "DatasetReference"
							},
							"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> Sink1"
						}
					],
					"script": "section Section1; shared #\"TripData\" = let AdfDoc = Web.Contents(\"https://bdataadlsgen2.dfs.core.windows.net/nyctaxidata-staging/trip_data/trip_data_1.csv?sv=2018-03-28&sig=GqfnzpNsitPfmZH8AwnhXmymQUcC4VSLFZAg9z%2BFJuA%3D&spr=https&se=2019-11-08T19%3A15%3A35Z&srt=sco&ss=bf&sp=rwl\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]), TrimmedHeaders = Table.TransformColumnNames(PromotedHeaders, (columnName as text) as text => Text.Trim(columnName)) in TrimmedHeaders;shared #\"TripFares\" = let AdfDoc = Web.Contents(\"https://bdataadlsgen2.dfs.core.windows.net/nyctaxidata-staging/trip_fare/trip_fare_1.csv?sv=2018-03-28&sig=1p0MCkz9EoTNb5RmDfw1HL%2F2Sl2QKvOllBw0kbSgbGs%3D&spr=https&se=2019-11-08T19%3A15%3A37Z&srt=sco&ss=bf&sp=rwl\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]), TrimmedHeaders = Table.TransformColumnNames(PromotedHeaders, (columnName as text) as text => Text.Trim(columnName)) in TrimmedHeaders;\r\nshared UserQuery = let\r\n  Source = TripData,\r\n  #\"Inner Join\" = Table.NestedJoin(Source, {\"medallion\", \"hack_license\", \"vendor_id\", \"pickup_datetime\"}, TripFares, {\"medallion\", \"hack_license\", \"vendor_id\", \"pickup_datetime\"}, \"TripFares\", JoinKind.Inner),\r\n  #\"Expanding Joined Tables\" = Table.ExpandTableColumn(#\"Inner Join\", \"TripFares\", {\"medallion\", \"hack_license\", \"vendor_id\", \"pickup_datetime\", \"payment_type\", \"fare_amount\", \"surcharge\", \"mta_tax\", \"tip_amount\", \"tolls_amount\", \"total_amount\"}, {\"TripFares.medallion\", \"TripFares.hack_license\", \"TripFares.vendor_id\", \"TripFares.pickup_datetime\", \"TripFares.payment_type\", \"TripFares.fare_amount\", \"TripFares.surcharge\", \"TripFares.mta_tax\", \"TripFares.tip_amount\", \"TripFares.tolls_amount\", \"TripFares.total_amount\"}),\r\n  #\"Converting to Decimal Types\" = Table.TransformColumnTypes(#\"Expanding Joined Tables\", {{\"TripFares.total_amount\", type number}, {\"passenger_count\", type number}, {\"trip_time_in_secs\", type number}, {\"trip_distance\", type number}}),\r\n  #\"Grouped rows\" = Table.Group(#\"Converting to Decimal Types\", {\"vendor_id\"}, {{\"total_passenger_count\", each List.Sum([passenger_count]), type number}, {\"total_trip_time_in_secs\", each List.Sum([trip_time_in_secs]), type number}, {\"total_trip_distance\", each List.Sum([trip_distance]), type number}, {\"total_trip_fare\", each List.Sum([TripFares.total_amount]), type number}})\r\nin\r\n  #\"Grouped rows\";"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_flatten_task_cakes_JSON')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_json_dataflow_sample",
								"type": "DatasetReference"
							},
							"name": "SourceJSONCakes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_dataflow_output",
								"type": "DatasetReference"
							},
							"name": "SinkFlattenOutput"
						}
					],
					"transformations": [
						{
							"name": "FlattenTopping"
						},
						{
							"name": "FlattenBatter"
						}
					],
					"script": "source(output(\n\t\tbatters as (batter as (id as short, type as string)[]),\n\t\tid as short,\n\t\tname as string,\n\t\tppu as double,\n\t\ttopping as (id as short, type as string)[],\n\t\ttype as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tsingleDocument: true,\n\twildcardPaths:['ManyJSON_Objects.json']) ~> SourceJSONCakes\nSourceJSONCakes foldDown(unroll(topping),\n\tmapColumn(\n\t\tid,\n\t\tcake_type = type,\n\t\tcake_name = name,\n\t\tppu,\n\t\ttopping_id = topping.id,\n\t\ttopping_type = topping.type,\n\t\tbatters\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenTopping\nFlattenTopping foldDown(unroll(batters.batter, batters.batter),\n\tmapColumn(\n\t\tid,\n\t\tcake_type,\n\t\tcake_name,\n\t\tppu,\n\t\ttopping_id,\n\t\ttopping_type,\n\t\tbatter_id = batters.batter.id,\n\t\tbatter_type = batters.batter.type\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenBatter\nFlattenBatter sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tpartitionFileNames:['flatten_output.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkFlattenOutput"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wdf_json_file')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ds_dataflow_sample",
							"script": "",
							"dataset": {
								"referenceName": "ds_dataflow_sample",
								"type": "DatasetReference"
							}
						}
					],
					"sinks": [
						{
							"name": "Sink1",
							"dataset": {
								"referenceName": "ds_dataflow_output",
								"type": "DatasetReference"
							},
							"script": "sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['adf_wdf_output.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink1"
						}
					],
					"script": "section Section1;\r\nshared ds_dataflow_sample = let\r\n  AdfDoc = AzureStorage.BlobContents(\"https://bdatablob.blob.core.windows.net/dataflows/ManyJSON_Objects - CSV.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \"|\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv])\r\nin\r\n  Csv;\r\nshared UserQuery = let\r\n  Source = ds_dataflow_sample,\r\n  #\"Renamed columns\" = Table.RenameColumns(Source, {{\"Column1\", \"column\"}}),\r\n  #\"Parse JSON\" = Table.TransformColumns(#\"Renamed columns\",{},Json.Document),\r\n  #\"Expand JSON\" = Table.ExpandRecordColumn(#\"Parse JSON\", \"column\", {\"id\", \"type\", \"name\", \"ppu\", \"batters\", \"topping\"}, {\"id\", \"type\", \"name\", \"ppu\", \"batters\", \"topping\"}),\r\n  #\"Unroll topping\" = Table.ExpandListColumn(#\"Expand JSON\", \"topping\"),\r\n  #\"Expand topping\" = Table.ExpandRecordColumn(#\"Unroll topping\", \"topping\", {\"id\", \"type\"}, {\"topping.id\", \"topping.type\"}),\r\n  #\"Expand batters\" = Table.ExpandRecordColumn(#\"Expand topping\", \"batters\", {\"batter\"}, {\"batter\"}),\r\n  #\"Unroll batter\" = Table.ExpandListColumn(#\"Expand batters\", \"batter\"),\r\n  #\"Expand batter\" = Table.ExpandRecordColumn(#\"Unroll batter\", \"batter\", {\"id\", \"type\"}, {\"batter.id\", \"batter.type\"})\r\nin\r\n  #\"Expand batter\";\r\n"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DV_InitialLoad_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HUB_Product",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureDataLakeStoreReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HUB_Product_HK",
											"type": "String"
										},
										"sink": {
											"name": "HUB_Product_HK",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ProductAlternateKey",
											"type": "String"
										},
										"sink": {
											"name": "ProductAlternateKey",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LOAD_TS",
											"type": "String"
										},
										"sink": {
											"name": "LOAD_TS",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADLS_dvs_product_init_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_DV_HUB_Product",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SAT_Product",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "HUB_Product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureDataLakeStoreReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HUB_Product_HK",
											"type": "String"
										},
										"sink": {
											"name": "HUB_Product_HK",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "WeightUnitMeasureCode",
											"type": "String"
										},
										"sink": {
											"name": "WeightUnitMeasureCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SizeUnitMeasureCode",
											"type": "String"
										},
										"sink": {
											"name": "SizeUnitMeasureCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EnglishProductName",
											"type": "String"
										},
										"sink": {
											"name": "EnglishProductName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "String"
										},
										"sink": {
											"name": "StandardCost",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "FinishedGoodsFlag",
											"type": "String"
										},
										"sink": {
											"name": "FinishedGoodsFlag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String"
										},
										"sink": {
											"name": "Color",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SafetyStockLevel",
											"type": "String"
										},
										"sink": {
											"name": "SafetyStockLevel",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "ReorderPoint",
											"type": "String"
										},
										"sink": {
											"name": "ReorderPoint",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "ListPrice",
											"type": "String"
										},
										"sink": {
											"name": "ListPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String"
										},
										"sink": {
											"name": "Size",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SizeRange",
											"type": "String"
										},
										"sink": {
											"name": "SizeRange",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "String"
										},
										"sink": {
											"name": "Weight",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "ModelName",
											"type": "String"
										},
										"sink": {
											"name": "ModelName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SAT_Product_HDIFF",
											"type": "String"
										},
										"sink": {
											"name": "SAT_Product_HDIFF",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LOAD_TS",
											"type": "String"
										},
										"sink": {
											"name": "LOAD_TS",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADLS_dvs_product_init_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_DV_SAT_Product",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LINK_InternetSales",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureDataLakeStoreReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LINK_InternetSales_HK",
											"type": "String"
										},
										"sink": {
											"name": "LINK_InternetSales_HK",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "HUB_Customer_HK",
											"type": "String"
										},
										"sink": {
											"name": "HUB_Customer_HK",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "HUB_Product_HK",
											"type": "String"
										},
										"sink": {
											"name": "HUB_Product_HK",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "SalesOrderNumber",
											"type": "String"
										},
										"sink": {
											"name": "SalesOrderNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SalesOrderLineNumber",
											"type": "String"
										},
										"sink": {
											"name": "SalesOrderLineNumber",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "LOAD_TS",
											"type": "String"
										},
										"sink": {
											"name": "LOAD_TS",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADLS_dvs_internetsales_init_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_DV_LINK_InternetSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SAT_InternetSales",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LINK_InternetSales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureDataLakeStoreReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LINK_InternetSales_HK",
											"type": "String"
										},
										"sink": {
											"name": "LINK_InternetSales_HK",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "RevisionNumber",
											"type": "String"
										},
										"sink": {
											"name": "RevisionNumber",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "OrderQuantity",
											"type": "String"
										},
										"sink": {
											"name": "OrderQuantity",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "String"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ExtendedAmount",
											"type": "String"
										},
										"sink": {
											"name": "ExtendedAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "UnitPriceDiscountPct",
											"type": "String"
										},
										"sink": {
											"name": "UnitPriceDiscountPct",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "DiscountAmount",
											"type": "String"
										},
										"sink": {
											"name": "DiscountAmount",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "ProductStandardCost",
											"type": "String"
										},
										"sink": {
											"name": "ProductStandardCost",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TotalProductCost",
											"type": "String"
										},
										"sink": {
											"name": "TotalProductCost",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "SalesAmount",
											"type": "String"
										},
										"sink": {
											"name": "SalesAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TaxAmt",
											"type": "String"
										},
										"sink": {
											"name": "TaxAmt",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Freight",
											"type": "String"
										},
										"sink": {
											"name": "Freight",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "CarrierTrackingNumber",
											"type": "String"
										},
										"sink": {
											"name": "CarrierTrackingNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustomerPONumber",
											"type": "String"
										},
										"sink": {
											"name": "CustomerPONumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "String"
										},
										"sink": {
											"name": "OrderDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "String"
										},
										"sink": {
											"name": "DueDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ShipDate",
											"type": "String"
										},
										"sink": {
											"name": "ShipDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SAT_InternetSales_HDIFF",
											"type": "String"
										},
										"sink": {
											"name": "SAT_InternetSales_HDIFF",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LOAD_TS",
											"type": "String"
										},
										"sink": {
											"name": "LOAD_TS",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADLS_dvs_internetsales_init_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_DV_SAT_InternetSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ASQL_DV_SAT_Product')]",
				"[concat(variables('factoryId'), '/datasets/ASQL_DV_SAT_InternetSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Delete files with Azure Data Factory FileSystem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Please input a folder path as the parameter for this pipeline, and the pipeline will delete files which were last modified more than 30 days ago under the particular folder path.",
				"activities": [
					{
						"name": "DeleteFiles",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Template_FileShare_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"recursive": true
						}
					}
				],
				"parameters": {
					"FolderPath": {
						"type": "String",
						"defaultValue": "/<mycontainer>/<myfolder>/"
					}
				},
				"folder": {
					"name": "Delete Activity"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Template_FileShare_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NYC Taxi Trip Fare Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy all files across multiple containers or buckets from one file-based storage store to another",
				"activities": [
					{
						"name": "List of Trips",
						"description": "Scan the file path on your source storage store and get the container list.",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AzureBlobStorageSourceFileStore",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.SourceFilePath_trip",
										"type": "Expression"
									},
									"filename": "*.zip"
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "For Each Trips",
						"description": "Get the container list from Metadata activity and then iterates each of them to Copy activity.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List of Trips",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List of Trips').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy Trip",
									"description": "Copy each container from source storage store to destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@concat(pipeline().parameters.SourceFilePath_trip,'/',item().name)"
										},
										{
											"name": "Destination",
											"value": "@concat(pipeline().parameters.DestinationFilePath_trip,'/',item().name)"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": false
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 2
									},
									"inputs": [
										{
											"referenceName": "AzureBlobStorageSourceFileStore",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@concat(pipeline().parameters.SourceFilePath_trip)",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_Gen2",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.DestinationFilePath_trip",
													"type": "Expression"
												},
												"filename": {
													"value": "@replace(item().name,'.zip','.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "List of Fares",
						"description": "Scan the file path on your source storage store and get the container list.",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AzureBlobStorageSourceFileStore",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.SourceFilePath_fare",
										"type": "Expression"
									},
									"filename": "*.zip"
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "For Each Fare",
						"description": "Get the container list from Metadata activity and then iterates each of them to Copy activity.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List of Fares",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List of Fares').output.childItems",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Copy Fare",
									"description": "Copy each container from source storage store to destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@concat(pipeline().parameters.SourceFilePath_trip,'/',item().name)"
										},
										{
											"name": "Destination",
											"value": "@concat(pipeline().parameters.DestinationFilePath_trip,'/',item().name)"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": false
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 2
									},
									"inputs": [
										{
											"referenceName": "AzureBlobStorageSourceFileStore",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@concat(pipeline().parameters.SourceFilePath_fare)",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_Gen2",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.DestinationFilePath_fare",
													"type": "Expression"
												},
												"filename": {
													"value": "@replace(item().name,'.zip','.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "NYC Taxi Distance Trip",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [
							{
								"activity": "For Each Trips",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "For Each Fare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "NYC_Taxi_Distance_Trip_wdf",
								"type": "DataFlowReference",
								"datasetParameters": {
									"TripData": {},
									"Sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"parameters": {
					"SourceFilePath_trip": {
						"type": "String",
						"defaultValue": "/nyctaxidata-raw/trip_data"
					},
					"DestinationFilePath_trip": {
						"type": "String",
						"defaultValue": "/nyctaxidata-staging/trip_data"
					},
					"SourceFilePath_fare": {
						"type": "string",
						"defaultValue": "/nyctaxidata-raw/trip_fare"
					},
					"DestinationFilePath_fare": {
						"type": "string",
						"defaultValue": "/nyctaxidata-staging/trip_fare"
					}
				},
				"folder": {
					"name": "Wrangling Data Flow Demos"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/NYC_Taxi_Distance_Trip_wdf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Wrangling Data Flow Taxi Demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Joining and Aggregating New York City Taxi Data using Wrangling Data Flows",
				"activities": [
					{
						"name": "Taxi Demo",
						"description": "Joining and Aggregating New York City Taxi Data",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TaxiDemo",
								"type": "DataFlowReference",
								"datasetParameters": {
									"TripData": {},
									"TripFares": {},
									"Sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"computeType": "General",
								"coreCount": 8
							}
						}
					}
				],
				"folder": {
					"name": "Wrangling Data Flow Demos"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TaxiDemo')]"
			]
		}
	]
}